FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install production dependencies only
RUN npm ci --only=production --legacy-peer-deps

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules

# Copy all source files
COPY . .

# Install dev dependencies for build
RUN npm install --only=development --legacy-peer-deps

# Build TypeScript (if you add build script later)
# RUN npm run build

# Production image, copy all the files and run worker
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production

# Create non-root user for security
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 worker

# Copy production dependencies
COPY --from=deps --chown=worker:nodejs /app/node_modules ./node_modules

# Copy source code
COPY --chown=worker:nodejs . .

USER worker

# Start worker using tsx for TypeScript execution
CMD ["npx", "tsx", "src/index.ts"]
